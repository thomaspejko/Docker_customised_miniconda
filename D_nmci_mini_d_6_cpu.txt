
######################## MINICONDA DOCKER
######################## https://hub.docker.com/r/continuumio/miniconda3/~/dockerfile/

FROM debian:latest

#  $ docker build . -t continuumio/miniconda3:latest -t continuumio/miniconda3:4.5.4
#  $ docker run --rm -it continuumio/miniconda3:latest /bin/bash
#  $ docker push continuumio/miniconda3:latest
#  $ docker push continuumio/miniconda3:4.5.4

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN apt-get update --fix-missing && \
    apt-get install -y wget bzip2 ca-certificates curl git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean -tipsy && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

ENV TINI_VERSION v0.16.1
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini

######################## Upgrade pip

RUN pip install --no-cache-dir --upgrade pip

######################## Install system dependencies for further packages

RUN apt-get update && \
    apt-get -y install \
	gcc \
	mono-mcs \
	g++ \
	python-dev \
	default-libmysqlclient-dev \
	git \
	libboost-all-dev \
	libexpat1-dev \
	python3-scipy \
	python3-numpy \
	libcgal-dev \
	libsparsehash-dev \
	libcairomm-1.0-dev \
	python3-cairo \
	python3-cairo-dev \
	python3-matplotlib \
	graphviz \
	python3-pygraphviz \
	python3-pip \
	gir1.2-gtk-3.0 \
	vim \
	bash-completion \
	sudo \
	python3-gi-cairo \
	&& \
    rm -rf /var/lib/apt/lists/*

######################## Install additional python packages

RUN pip --no-cache-dir install \
	numpy \
	scipy \
	nose \
	h5py \
	scikit-image \
	matplotlib \
	pandas \
	sklearn \
	sympy \
	msgpack \
	argparse \
	gensim \
	spacy \
	matplotlib \
	sklearn \
	pattern \
	plotly 

######################## Install pylemmagen (correction needed within container; guide below)
######################## https://stackoverflow.com/questions/21034373/how-to-load-edit-run-save-text-files-py-into-an-ipython-notebook-cell

RUN pip --no-cache-dir install git+https://github.com/oroszgy/pylemmagen.git

######################## Install DeepLearning frameworks

ARG TENSORFLOW_VERSION=1.8.0
ARG TENSORFLOW_ARCH=cpu
ARG KERAS_VERSION=2.2.2

######################## Install TensorFlow

RUN pip --no-cache-dir install --ignore-installed \
	https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp36-cp36m-linux_x86_64.whl

######################## Install Keras

RUN pip --no-cache-dir install git+git://github.com/fchollet/keras.git@${KERAS_VERSION}

######################## Install Graph-tool

RUN echo "deb http://downloads.skewed.de/apt/stretch stretch main" >> /etc/apt/sources.list && \
	echo "deb-src http://downloads.skewed.de/apt/stretch stretch main" >> /etc/apt/sources.list

#RUN apt-key adv --keyserver pgp.skewed.de --recv-key 612DEFB798507F25

RUN apt-get update && apt-get install --yes --no-install-recommends --allow-unauthenticated \
	python3-graph-tool

RUN pip --no-cache-dir install git+https://git.skewed.de/count0/graph-tool.git

######################## Final commands

ENTRYPOINT [ "/usr/bin/tini", "--" ]
CMD [ "/bin/bash" ]